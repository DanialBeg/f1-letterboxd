name: Playwright Tests

on:
  push:
    branches: [ main, feat/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      # Start backend service for tests
      backend:
        image: golang:1.21
        ports:
          - 8080:8080
        options: >-
          --health-cmd "curl -f http://localhost:8080/api/seasons || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    # Setup Go for backend
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    # Setup Node.js for frontend
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    # Install backend dependencies and start server
    - name: Install Go dependencies
      working-directory: ./backend
      run: go mod tidy
    
    - name: Start backend server
      working-directory: ./backend
      run: |
        go run . &
        sleep 10  # Wait for server to start
      env:
        PORT: 8080
    
    # Install frontend dependencies
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    # Install Playwright browsers
    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps
    
    # Run Playwright tests
    - name: Run Playwright tests
      working-directory: ./frontend
      run: npm run test
    
    # Upload test results
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30